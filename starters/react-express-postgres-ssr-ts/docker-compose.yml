version: '3.8'
name: ljas-express-postgres-ts
services:
    db:
        build:
            dockerfile: db.Dockerfile
        image: ljas-express-postgres-ts-db
        container_name: ljas-express-postgres-ts-db
        restart: always
        ports:
            - '${POSTGRES_PORT}:${POSTGRES_PORT}'
        env_file: .env
        command: '-p ${POSTGRES_PORT}'
        volumes:
            - ljas-express-postgres-ts-db-data:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER} -p ${POSTGRES_PORT}',
                ]
            interval: 10s
            timeout: 5s
            retries: 5
    app:
        build: .
        image: ljas-express-postgres-ts
        container_name: ljas-express-postgres-ts
        depends_on:
            db:
                condition: service_healthy
        restart: always
        ports:
            - '${PORT_EXPRESS}:${PORT_EXPRESS}'
            - '${PORT_WEBPACK_DEV_SERVER}:${PORT_WEBPACK_DEV_SERVER}'
            - '5555:5555' # Exposes Prisma Studio. Also defined in the "prisma:studio" package.json script.
            - '9229:9229' # Exposes Node.js debugger. Also defined in the "start:debug" package.json script.
            - '9230:9230' # Exposes Jest debugger. Also defined in the "test:debug" package.json script.
            - '9231:9231' # Exposes webpack debugger. Also defined in the build debug package.json scripts.
            - '9323:9323' # Exposes Playwright report. Also defined in the "test:e2e:report" package.json script and Playwright config.
        volumes:
            - .:/code
            - ljas-express-postgres-ts-node_modules:/code/node_modules
volumes:
    ljas-express-postgres-ts-db-data:
    ljas-express-postgres-ts-node_modules:
